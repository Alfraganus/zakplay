{
    "openapi": "3.0.0",
    "info": {
        "title": "Zakplay API endpoints",
        "version": "1.0"
    },
    "paths": {
        "/api/car-models": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Get all car models",
                "operationId": "d5c611f608568e2bd3b02dee3aa0b088",
                "responses": {
                    "200": {
                        "description": "List of car models"
                    }
                }
            },
            "post": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Create a new car model",
                "operationId": "401c8a5c9142f8d9e6a8b909d217c918",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Chevrolet"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Cobalt"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car model created"
                    }
                }
            }
        },
        "/api/car-models/{id}": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Get a specific car model",
                "operationId": "9516c1ab1c354f883836be356438a790",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car model found"
                    },
                    "404": {
                        "description": "Car model not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Update a car model",
                "operationId": "7c523a664e2b4591f4cf63f7090205a7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Kia"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "K5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car model updated"
                    },
                    "404": {
                        "description": "Car model not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Delete a car model",
                "operationId": "ffd3fd8f8f40ceb7b7a17ce3f5961c3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car model deleted"
                    },
                    "404": {
                        "description": "Car model not found"
                    }
                }
            }
        },
        "/api/car-colors": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Get all car colors in Uzbek",
                "operationId": "43c5b2acbf639f255bf58d61c47890fc",
                "responses": {
                    "200": {
                        "description": "List of car colors"
                    }
                }
            }
        },
        "/api/dashboard/user-counts": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get counts of Tablets, Drivers, and RoadmapTests",
                "description": "Returns the total number of Tablets, Drivers, and RoadmapTests",
                "operationId": "858b3f24f64d0dcda9f135c66cc25906",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tablet_count": {
                                            "type": "integer",
                                            "example": 25
                                        },
                                        "driver_count": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "roadmap_test_count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dashboard/weekly-test-stats": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get weekly test stats by department",
                "operationId": "fbeef4216d5980dd27b609f842a66f5f",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date of the range (optional, defaults to current week start)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-08-12"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date of the range (optional, defaults to current week end)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-08-18"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "department_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "range": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "2024-08-12"
                                            }
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "Monday": 5,
                                                "Tuesday": 2,
                                                "Wednesday": 0,
                                                "Thursday": 3,
                                                "Friday": 7,
                                                "Saturday": 1,
                                                "Sunday": 0
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/drivers": {
            "get": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Get all drivers",
                "operationId": "a75c8627a59b2479de780c37b0c06e03",
                "responses": {
                    "200": {
                        "description": "List of drivers"
                    }
                }
            },
            "post": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Create a new driver",
                "operationId": "829ed7a657b54c9727b94e7b814c2497",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fullname",
                                    "date_of_brith",
                                    "car_model",
                                    "car_color",
                                    "car_plate_number"
                                ],
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "Ali Valiyev"
                                    },
                                    "date_of_brith": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "login": {
                                        "type": "string",
                                        "example": "ali123"
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "car_model": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "car_color": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "car_plate_number": {
                                        "type": "string",
                                        "example": "01A123BC"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Driver created"
                    }
                }
            }
        },
        "/api/drivers/{id}": {
            "get": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Get driver by ID",
                "operationId": "b8cec5341d14f654472f26d4c0771b61",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver details"
                    },
                    "404": {
                        "description": "Driver not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Update driver",
                "operationId": "5b5192462e5b1b239c63d12bda639848",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "Updated Name"
                                    },
                                    "date_of_brith": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1995-02-02"
                                    },
                                    "login": {
                                        "type": "string",
                                        "example": "new_login"
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "654321"
                                    },
                                    "car_model": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "car_color": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "car_plate_number": {
                                        "type": "string",
                                        "example": "01X456YZ"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Driver updated"
                    },
                    "404": {
                        "description": "Driver not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Delete driver",
                "operationId": "8351d443e6a33b2c835fb86af7782d12",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver deleted"
                    },
                    "404": {
                        "description": "Driver not found"
                    }
                }
            }
        },
        "/api/drivers/models": {
            "get": {
                "tags": [
                    "Drivers"
                ],
                "summary": "List all unique car models used by drivers",
                "operationId": "db9f7cc292a6471e8b9f7eeb0d38d5ad",
                "responses": {
                    "200": {
                        "description": "List of unique car models"
                    }
                }
            }
        },
        "/api/leaderboards": {
            "get": {
                "tags": [
                    "Leaderboard"
                ],
                "summary": "Get all leaderboards",
                "operationId": "46160af8011eabf10c1b92e020120178",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "post": {
                "tags": [
                    "Leaderboard"
                ],
                "summary": "Create a new leaderboard",
                "operationId": "4e1e0708543efc317952a26daab77588",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "start_date",
                                    "finish_date"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "finish_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "test_type": {
                                        "type": "string"
                                    },
                                    "test_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/api/leaderboards/{id}": {
            "get": {
                "tags": [
                    "Leaderboard"
                ],
                "summary": "Get a single leaderboard",
                "operationId": "2bbae21676ce8ad0356bdd4660dc22b8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Leaderboard"
                ],
                "summary": "Update a leaderboard",
                "operationId": "593f39ab188d1c7d328df60f94aca667",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "finish_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "test_type": {
                                        "type": "string"
                                    },
                                    "test_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Leaderboard"
                ],
                "summary": "Delete a leaderboard",
                "operationId": "6f46cf5f5230dd4076fea3425d6a1ead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/leaderboards/{id}/results": {
            "get": {
                "tags": [
                    "Leaderboard"
                ],
                "summary": "Get all test results by leaderboard ID",
                "operationId": "8a83c19c299f46ccb273734a1d3d82b1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Leaderboard not found"
                    }
                }
            }
        },
        "/api/ads": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Get all ads",
                "operationId": "95e866a5f6c8b3a8997ce0a74d7ce918",
                "responses": {
                    "200": {
                        "description": "List of ads",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/zakplay/test-question/upsert": {
            "post": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Create a new test",
                "description": "Endpoint to create a new test",
                "operationId": "createTestQuestionupsert",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "questionInfo": {
                                        "properties": {
                                            "test_id": {
                                                "type": "string",
                                                "example": "2"
                                            },
                                            "question_text": {
                                                "type": "string",
                                                "example": "What is the capital of France?"
                                            },
                                            "points": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "language": {
                                                "type": "string",
                                                "example": "uz_cyril"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "optionsInfo": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "option_text": {
                                                    "type": "string",
                                                    "example": "Paris"
                                                },
                                                "is_correct": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Test created successfully"
                    },
                    "422": {
                        "description": "Validation error or invalid input"
                    }
                }
            }
        },
        "/api/ads/{id}": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Get a single ad by ID",
                "operationId": "26115a3b639eda338e4d4215d8c7ac77",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ad",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ad found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ad not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ads"
                ],
                "summary": "Delete an ad by ID",
                "operationId": "83f4de151f256f1c5cf2d1633f0013ee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ad to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ad deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ad deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ad not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/zakplay/department/delete/{id}": {
            "delete": {
                "tags": [
                    "department"
                ],
                "summary": "delete a department by ID",
                "description": "deletezakplay department by its ID.",
                "operationId": "4fbcd2789280e78c8cfd244106c8f19d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the zakplay test",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Test not found"
                    }
                }
            }
        },
        "/api/zakplay/test-question/delete": {
            "delete": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Delete a test question",
                "operationId": "deleteTestQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the test question to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test question deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Test question deleted successfully"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Test question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "Test question not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/zakplay/test/delete": {
            "delete": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Delete test",
                "operationId": "deleteTest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the test question to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test question deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Test question deleted successfully"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Test question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "Test question not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/zakplay/department/upsert": {
            "post": {
                "tags": [
                    "department"
                ],
                "summary": "Create a new department",
                "description": "Endpoint to create a new test",
                "operationId": "upsertDepartment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "department_name_": {
                                        "type": "string",
                                        "example": "Karzinka"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Test created successfully"
                    },
                    "422": {
                        "description": "Validation error or invalid input"
                    }
                }
            }
        },
        "/api/zakplay/test/get": {
            "get": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Get the next test and mark the next department",
                "description": "Returns a random test from the current department based on priority, and marks the next department as is_next_one.",
                "operationId": "45755f8bd444133f8aafcfe6acb59f5d",
                "responses": {
                    "200": {
                        "description": "Successful response with test and next department info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "selected_test": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "department_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Sample Test"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "next_department_id": {
                                            "type": "integer",
                                            "example": 3
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No department or no tests found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No department found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/zakplay/test/get-by-department_id": {
            "get": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Get all tests by department ID",
                "description": "Retrieve all roadmap tests associated with a specific department ID.",
                "operationId": "e205a05d292dca480a159e5165002af3",
                "parameters": [
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "ID of the department to get tests for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of tests for the department",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Roadmap Test Title"
                                                    },
                                                    "ad_place": {
                                                        "type": "string",
                                                        "example": "Place of Ad"
                                                    },
                                                    "views_limit": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "time_for_question": {
                                                        "type": "integer",
                                                        "example": 60
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No tests found for the given department ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No tests found for the given department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/zakplay/test-question/get-all-questions": {
            "get": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Get a Single Test Question",
                "description": "Retrieve a single test question by test_id and question_id.",
                "operationId": "getSinglequestions",
                "parameters": [
                    {
                        "name": "test_id",
                        "in": "query",
                        "description": "ID of the zakplay test",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Question not found"
                    }
                }
            }
        },
        "/api/zakplay/department/find-by-id/{id}": {
            "get": {
                "tags": [
                    "department"
                ],
                "summary": "Get a department by ID",
                "description": "Retrieve details of a zakplay department by its ID.",
                "operationId": "findByIdde",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the zakplay test",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Test not found"
                    }
                }
            }
        },
        "/api/zakplay/department/all": {
            "get": {
                "tags": [
                    "department"
                ],
                "summary": "Get deoartnebts",
                "description": "Retrieve departments",
                "operationId": "getdepartment",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Question not found"
                    }
                }
            }
        },
        "/api/zakplay/test-question/get-single-question": {
            "get": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Get a Single Test Question",
                "description": "Retrieve a single test question by test_id and question_id.",
                "operationId": "getSingleQuestion",
                "parameters": [
                    {
                        "name": "test_id",
                        "in": "query",
                        "description": "ID of the zakplay test",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "question_id",
                        "in": "query",
                        "description": "ID of the Test Question",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Question not found"
                    }
                }
            }
        },
        "/api/zakplay/test/find-by-id/{id}": {
            "get": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Get a zakplay test by ID",
                "description": "Retrieve details of a zakplay test by its ID.",
                "operationId": "findById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the zakplay test",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Test not found"
                    }
                }
            }
        },
        "/api/zakplay/test/answers/show": {
            "post": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Submitting test answers",
                "operationId": "submitshowAnswer",
                "parameters": [
                    {
                        "name": "device_id",
                        "in": "header",
                        "description": "Device ID from header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response description"
                    },
                    "400": {
                        "description": "Bad request response description"
                    }
                }
            }
        },
        "/api/zakplay/test/answers/submit": {
            "post": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Submitting test answers",
                "operationId": "submitAnswer",
                "requestBody": {
                    "description": "Data format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "test_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "fullname": {
                                        "type": "string",
                                        "example": "Alfra"
                                    },
                                    "phone": {
                                        "type": "integer",
                                        "example": "998995556677"
                                    },
                                    "test_answers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "question_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response description"
                    },
                    "400": {
                        "description": "Bad request response description"
                    }
                }
            }
        },
        "/api/zakplay/test/update/{id}": {
            "put": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Update a Roadmap Test",
                "description": "Update the details of a Roadmap Test, including ad placement, views, and other parameters.",
                "operationId": "abf16f2d9a66ccc794ff3cbe96914693",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Roadmap Test to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ad_place",
                                    "ad_after_question",
                                    "ad_id",
                                    "views_limit",
                                    "time_for_question"
                                ],
                                "properties": {
                                    "ad_place": {
                                        "description": "The ad placement position",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ad_after_question": {
                                        "description": "The ad will appear after the question with this ID",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "ad_id": {
                                        "description": "The ID of the ad",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "views_limit": {
                                        "description": "The view limit for the roadmap test",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "time_for_question": {
                                        "description": "Time allocated for answering a question in seconds",
                                        "type": "integer",
                                        "example": 60
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the Roadmap Test",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Roadmap test updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "ad_place": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "ad_after_question": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "ad_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "views_limit": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "time_for_question": {
                                                    "type": "integer",
                                                    "example": 60
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Roadmap test not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Roadmap test not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/zakplay/test/upsert-adinfo": {
            "post": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Upsert a zakplay test",
                "description": "Creates or updates a roadmap lesson",
                "operationId": "13461106276eedbd8619f5858147d09b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ad_place": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ad_after_question": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ad_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "time_for_question": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "views_limit": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ads/upsert": {
            "post": {
                "tags": [
                    "Ads"
                ],
                "summary": "Create or update an ad",
                "operationId": "upsertAds",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "department_id",
                                    "title",
                                    "ad_list_en",
                                    "ad_list_ru"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Ad ID (for update only)",
                                        "type": "integer"
                                    },
                                    "department_id": {
                                        "description": "ID of the department",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "Title of the ad",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Whether the ad is active",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ad_list_en": {
                                        "description": "Media file for English version",
                                        "type": "file"
                                    },
                                    "ad_list_ru": {
                                        "description": "Media file for Russian version",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/zakplay/test/upsert": {
            "post": {
                "tags": [
                    "zakplay test"
                ],
                "summary": "Upsert a zakplay test",
                "description": "Creates or updates a roadmap lesson",
                "operationId": "upsertRoadmapTest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "title_": {
                                        "type": "string",
                                        "example": "zakplay test Title"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tablets": {
            "get": {
                "tags": [
                    "Tablets"
                ],
                "summary": "Get list of tablets",
                "operationId": "ebcdf212023b3344ca8ad250023b6fb3",
                "responses": {
                    "200": {
                        "description": "List of tablets"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tablets"
                ],
                "summary": "Create new tablet",
                "operationId": "696f6b90961df36a88316b0a9b4bc90b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "date",
                                    "current_address",
                                    "driver_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Tablet 1"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-04"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": 1
                                    },
                                    "current_address": {
                                        "type": "string",
                                        "example": "Tashkent, Uzbekistan"
                                    },
                                    "driver_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tablet created"
                    }
                }
            }
        },
        "/api/tablets/{id}": {
            "get": {
                "tags": [
                    "Tablets"
                ],
                "summary": "Get tablet by ID",
                "operationId": "b9e1208baf6db66bcbfc6ddfd457c22f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tablet details"
                    },
                    "404": {
                        "description": "Tablet not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tablets"
                ],
                "summary": "Update tablet",
                "operationId": "ae22c1cb834454e8026d34c51337b2b9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Tablet"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-01"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "current_address": {
                                        "type": "string",
                                        "example": "Samarkand"
                                    },
                                    "driver_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tablet updated"
                    },
                    "404": {
                        "description": "Tablet not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tablets"
                ],
                "summary": "Delete tablet",
                "operationId": "23f858d781a776f82f3fbaaef392ce9d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tablet deleted"
                    },
                    "404": {
                        "description": "Tablet not found"
                    }
                }
            }
        },
        "/api/getme": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user info",
                "operationId": "67096d075e27805e94d1a8e0e109c2e8",
                "responses": {
                    "200": {
                        "description": "Authenticated user info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john@example.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-10-01T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-10-01T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a user",
                "operationId": "baf8ef5324a0a790bf30f2b00f6d0ecf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "14195398e1cc07dc93534986c40fb68b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "1234"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Car Models",
            "description": "API Endpoints for Car Models"
        },
        {
            "name": "Drivers",
            "description": "Driver management endpoints"
        },
        {
            "name": "Leaderboard",
            "description": "API Endpoints for managing leaderboards"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard"
        },
        {
            "name": "Ads",
            "description": "Ads"
        },
        {
            "name": "zakplay test",
            "description": "zakplay test"
        },
        {
            "name": "department",
            "description": "department"
        },
        {
            "name": "Tablets",
            "description": "Tablets"
        },
        {
            "name": "Auth",
            "description": "Auth"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}